- name: Create a basic network
  hetzner.hcloud.hcloud_network:
    api_token: "{{ lookup('env','HCLOUD_TOKEN') | default(hetzner_token, true) }}"
    name: "{{ hetzner_network_name }}"
    ip_range: "{{ hetzner_network }}"
    state: "{{ hetzner_network_state }}"
  register: server_network

- name: Create a basic subnetwork
  hetzner.hcloud.hcloud_subnetwork:
    api_token: "{{ lookup('env','HCLOUD_TOKEN') | default(hetzner_token, true) }}"
    network: "{{ hetzner_network_name }}"
    ip_range: "{{ hetzner_network }}"
    network_zone: eu-central
    type: cloud
    state: "{{ hetzner_network_state }}"
  when: server_network.hcloud_network.id is defined

- name: Create a basic IPv4 Floating IP
  hetzner.hcloud.hcloud_floating_ip:
    api_token: "{{ lookup('env','HCLOUD_TOKEN') | default(hetzner_token, true) }}"
    name: floating-ip
    home_location: fsn1
    #labels:
    #  floatingtest: ""
    type: ipv4
    state: "{{ hetzner_floating_state }}"

- name: Gather hcloud Floating ip infos
  hetzner.hcloud.hcloud_floating_ip_info:
    api_token: "{{ lookup('env','HCLOUD_TOKEN') | default(hetzner_token, true) }}"
  register: output

- name: Print the gathered infos
  debug:
    var: output


