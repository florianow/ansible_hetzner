---
- name: Create a basic ssh_key
  hcloud_ssh_key:
    api_token: "{{ lookup('env','HCLOUD_TOKEN') | default(hetzner_token, true) }}"
    name: "{{ key_name }}"
    public_key: "{{ pub_key }}"
    state: "{{ hetzner_server_state }}"

- name: build list of workers
  debug:
    msg: "{{ node_name }}-{{ item }}"
  loop: "{{ range(0, hetzner_worker_count)|list }}"
  register: workernames

- name: set worker list fact
  set_fact:
    workernames: "{{ workernames.results | map(attribute='msg') | list }}"

- name: master count can't be divisibleby 2
  assert:
    that: hetzner_master_count |int is not divisibleby 2

- name: build list of masters
  debug:
    msg: "{{ master_name }}-{{ item }}"
  loop: "{{ range(0, hetzner_master_count)|list }}"
  register: masternames

- name: set master list fact
  set_fact:
    masternames: "{{ masternames.results | map(attribute='msg') | list }}"

- name: execute hcloud deployment
  module_defaults:
    hcloud_server:
      api_token: "{{ lookup('env','HCLOUD_TOKEN') | default(hetzner_token, true) }}"
      image: "{{ hetzner_instance_os }}"
      server_type: "{{ hetzner_instance_type }}"
      #datacenter: "{{ hetzner_datacenter }}"
      ssh_keys: "{{ hetzner_ssh_keys }}"
      state: "{{ hetzner_server_state }}"
  block:
    - loop: "{{ masternames + workernames }}"
      hcloud_server:
        name: "{{ item }}"
      register: hcloud_server

- name: execute hcloud server network
  module_defaults:
    hcloud_server_network:
      api_token: "{{ lookup('env','HCLOUD_TOKEN') | default(hetzner_token, true) }}"
      network: "{{ hetzner_network_name }}"
      state: "{{ hetzner_server_state }}"
  block:
    - loop: "{{ masternames + workernames }}"
      hcloud_server_network:
        server: "{{ item }}"
  when: hcloud_server.results[0].hcloud_server.status is defined
